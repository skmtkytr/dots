set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
  set -g @prefix_highlight_show_copy_mode 'on'
  set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'
  set -g @prefix_highlight_show_sync_mode 'on'
  set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green' # default is 'fg=default,bg=yellow'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# ペイン内容の保存をONに
set -g @resurrect-capture-pane-contents 'on'
# 例えば、makeコマンドでの開発サーバやpythonのREPLを起動することが多いので以下設定をしています
set -g @resurrect-processes '"~make" "~python"'

# tmux起動時の自動リストアをONに
set -g @continuum-restore 'on'
# auto start terminal
set -g @continuum-boot 'on'
# set -g @continuum-boot-options 'alacritty,fullscreen'
# set -g @plugin 'erikw/tmux-powerline'
# set -g @plugin 'wfxr/tmux-power'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

#utf setting
set-window-option -g mode-keys vi
set-window-option -g automatic-rename off

# prefix y End copy & exit copy-mode
# bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# set -g status-bg white
# set -g status-fg black

set -s escape-time 0
# setw -g window-status-current-attr underscore

# 256色ターミナル
# set-option -g default-terminal "screen-256color""
set -g default-terminal "screen-256color"
# set -ag terminal-overrides ",alacritty:RGB"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set-option -g default-shell /usr/local/bin/fish
# set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}"
# set-option -g default-shell /opt/homebrew/bin/fish
# set -g default-command /opt/homebrew/bin/fish

# set -g pane-active-border-fg white
# set -g pane-active-border-bg black

# set-window-option -g mode-bg white
# set-window-option -g mode-fg black
# set-window-option -g window-status-bg black
# set-window-option -g window-status-fg white
# set-window-option -g window-status-current-bg blue
# set-window-option -g window-status-current-fg black
# set-window-option -g window-status-current-attr bold

set-option -g history-limit 3000
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Set the prefix to ^T.
#unbind C-b
#set -g prefix ^T
#bind C-t send-prefix

# Set the prefix to ^A
unbind C-b
set -g prefix C-a
# bind C-b send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
# unbind ^X
# bind ^X lock-server
# unbind x
# bind x lock-server

# screen ^C c
unbind ^C
bind ^C new-window -n fish
bind c new-window -n fish

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# copy-mode ^[
unbind ^"["
bind -r ^"[" copy-mode
unbind ^]
bind -r ^] paste-buffer

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^R r
unbind ^R
bind ^R refresh-client
unbind r
bind r refresh-client
#bind r source-file ~/.tmux.conf ¥; display-message "Reload Config!!"

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t :.-
unbind BTab
bind BTab select-pane -t :.+
unbind ^H
bind ^H select-pane -t :.-
unbind h
bind ^h select-pane -t :.-
unbind ^L
bind ^L select-pane -t :.+
unbind l
bind l select-pane -t :.+

bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R

# " windowlist -b
#unbind '"'
#bind '"' choose-window

# window の作成, 移動
bind -n M-c new-window -c "#{pane_current_path}"
bind -n M-j next-window
bind -n M-k previous-window

# session の作成, 移動
bind -n M-C new-session
bind -n M-l switch-client -n
bind -n M-h switch-client -p

# pane の分割
bind -n M-v split-window -h -c "#{pane_current_path}"
bind -n M-s split-window -v -c "#{pane_current_path}"

bind -n M-a choose-tree
bind -n M-e choose-session
bind -n M-w choose-tree -w

unbind Space
bind Space popup -xC -yC -w70% -h70% -E 'tmux a -t popup || tmux new -s popup -c "#{pane_current_path}"'
unbind G
bind G popup -xC -yC -w70% -h70% -E 'tmux a -t popup || tmux new -s popup -c "#{pane_current_path}" lazygit'

# Reattach each new window to the user bootstrap namespace
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# set -g default-command "which reattach-to-user-namespace > /dev/null ; and reattach-to-user-namespace -l $SHELL ; or $SHELL -l"
# set-option -g default-command "reattach-to-user-namespace -l $SHELL"
# if-shell "[ -x $(where reattach-to-user-namespace) ]" 'set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# set -g status-attr dim
set -g status-left-length 32
set -g status-right-length 150

set-option -g focus-events on

set -g status-fg white
set -g status-bg colour234
# set -g window-status-activity-attr bold
# set -g pane-border-fg colour245
# set -g pane-active-border-fg colour39

run-shell "powerline-daemon -q"
run-shell "powerline-config tmux setup"
source ~/.local/share/mise/installs/python/3/lib/python3.12/site-packages/powerline/bindings/tmux/powerline.conf
# source ~/.pyenv/versions/neovim-3/lib/python3.11/site-packages/powerline/bindings/tmux/powerline.conf
set -g status-interval 2
set -g status-left "#{prefix_highlight}#[fg=colour108,bg=colour237,bold] [#S:#I:#P]  #[fg=green,bg=black]#(tmux-mem-cpu-load --colors -p -a 0 --interval 2)#[default]"
set -g status-left-length 60

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

